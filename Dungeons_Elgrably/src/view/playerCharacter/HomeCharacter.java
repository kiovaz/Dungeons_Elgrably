/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.playerCharacter;

import classes_de_conexao.Conexao;
import java.sql.Connection;
import java.sql.SQLException;
import view.player.Home;
import classes_de_conexao.Conexao;
import java.awt.Image;
import java.awt.List;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.sql.*;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ramon Souza
 */
public class HomeCharacter extends javax.swing.JFrame {

    private int id_player;

    /**
     * Creates new form Login
     */
    public HomeCharacter() {
        initComponents();
    }

    public HomeCharacter(int id) {
        initComponents();
        this.id_player = id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        newGame = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        Continue = new javax.swing.JButton();
        Developers = new javax.swing.JButton();
        Config = new javax.swing.JButton();
        History = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        newGame.setText("New Game");
        newGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameActionPerformed(evt);
            }
        });

        exit.setText("Sair");
        exit.setPreferredSize(new java.awt.Dimension(88, 23));
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        Continue.setText("Continue");
        Continue.setPreferredSize(new java.awt.Dimension(88, 23));
        Continue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContinueActionPerformed(evt);
            }
        });

        Developers.setText("Desenvolvedores");
        Developers.setPreferredSize(new java.awt.Dimension(88, 23));

        Config.setText("Configurações");
        Config.setPreferredSize(new java.awt.Dimension(88, 23));

        History.setText("História");
        History.setPreferredSize(new java.awt.Dimension(88, 23));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Continue, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newGame, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Config, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(History, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Developers, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(newGame, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Continue, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Config, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(History, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Developers, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(240, 110, 360, 380);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/star.jpg"))); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 800, 600);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleName("Cadastro");
        jPanel1.getAccessibleContext().setAccessibleDescription("Cadastro");

        getAccessibleContext().setAccessibleName("Cadastrar");
        getAccessibleContext().setAccessibleDescription("Cadastrar");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameActionPerformed
        // TODO add your handling code here:
        CadastrarPlayerCharacter cadastrarPlayerCharacter = new CadastrarPlayerCharacter(id_player);
        cadastrarPlayerCharacter.setId_player(getId_player());
        cadastrarPlayerCharacter.setVisible(true);
        cadastrarPlayerCharacter.pack();
        cadastrarPlayerCharacter.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_newGameActionPerformed

    private void ContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContinueActionPerformed
        // TODO add your handling code here:
        System.out.println(id_player);
        AutenticarPlayerCharacter autenticarPlayerCharacterFrame = new AutenticarPlayerCharacter(id_player);

        try {

            Connection con = Conexao.faz_conexao();

            String sql = "select * from dados_playercharacter where player_id = ?";

            PreparedStatement stmt = con.prepareStatement(
                    sql,
                    ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_READ_ONLY
            );

            stmt.setInt(1, id_player);

            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                autenticarPlayerCharacterFrame.getTfNomeUser().setText(rs.getString("character_name"));
                autenticarPlayerCharacterFrame.getTfLvlUser().setText(rs.getString("nivel"));
                autenticarPlayerCharacterFrame.getTfSaudeUser().setText(rs.getString("vida_atual"));

                if (rs.getString("type").equals("Cavaleiro")) {
                    autenticarPlayerCharacterFrame.getTfForcaUser().setText(rs.getString("forca"));
                }
                if (rs.getString("type").equals("Mago")) {
                    autenticarPlayerCharacterFrame.getTfForcaUser().setText(rs.getString("manaAtual"));
                }

                autenticarPlayerCharacterFrame.getTfAgilidade().setText(rs.getString("agilidade"));

                //              ****************************************para mostrar a imagem ******************************************************
                Blob blob = (Blob) rs.getBlob("foto");
                byte[] img = blob.getBytes(1, (int) blob.length());
                BufferedImage imagem = null;
                try {
                    imagem = ImageIO.read(new ByteArrayInputStream(img));
                } catch (Exception e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null, "Algo de errado nao esta certo");
                }

                ImageIcon icone = new ImageIcon(imagem);
                Icon foto = new ImageIcon(icone.getImage().getScaledInstance(autenticarPlayerCharacterFrame.getLblFoto().getWidth(),
                        autenticarPlayerCharacterFrame.getLblFoto().getHeight(), Image.SCALE_SMOOTH));
                autenticarPlayerCharacterFrame.getLblFoto().setIcon(foto);
//              ********************************************************************************************************************

                autenticarPlayerCharacterFrame.getNextBtn().addActionListener(e -> {

                    try {

                        if (rs.next()) {
                            atualizarInterface(autenticarPlayerCharacterFrame, rs);
                        } else {
                            JOptionPane.showMessageDialog(null, "aqui é um aviso para mostrar que estou muito"
                                    + " coringado nesta parte e implorando por sanidade"
                                    + " mental, e que não tem mais lojas para aparecer.");
                        }

                    } catch (SQLException ex) {
                        System.out.println(ex);
                    }

                });

                autenticarPlayerCharacterFrame.getPrevBtn().addActionListener(e -> {

                    try {

                        if (rs.previous()) {
                            atualizarInterface(autenticarPlayerCharacterFrame, rs);
                        } else {
                            JOptionPane.showMessageDialog(null, "aqui é um aviso para mostrar que estou muito"
                                    + " coringado nesta parte e implorando por sanidade"
                                    + " mental, e que não tem mais lojas para aparecer.");
                        }

                    } catch (SQLException exyz) {
                        System.out.println(exyz);
                    }

                });

            }

        } catch (Exception e) {
            System.out.println(e);
        }

        autenticarPlayerCharacterFrame.setVisible(true);
        autenticarPlayerCharacterFrame.pack();
        autenticarPlayerCharacterFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_ContinueActionPerformed

    private void atualizarInterface(AutenticarPlayerCharacter listarPlayerCharacter, ResultSet rs) {
        try {
            listarPlayerCharacter.getTfNomeUser().setText(rs.getString("character_name"));
            listarPlayerCharacter.getTfLvlUser().setText(rs.getString("nivel"));
            listarPlayerCharacter.getTfSaudeUser().setText(rs.getString("vida_atual"));

            if (rs.getString("type").equals("Cavaleiro")) {
                listarPlayerCharacter.getTfForcaUser().setText(rs.getString("forca"));
            }
            if (rs.getString("type").equals("Mago")) {
                listarPlayerCharacter.getTfForcaUser().setText(rs.getString("manaAtual"));
            }

            listarPlayerCharacter.getTfAgilidade().setText(rs.getString("agilidade"));

            //              ****************************************para mostrar a imagem ******************************************************
            Blob blob = (Blob) rs.getBlob("foto");
            byte[] img = blob.getBytes(1, (int) blob.length());
            BufferedImage imagem = null;
            try {
                imagem = ImageIO.read(new ByteArrayInputStream(img));
            } catch (Exception e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, "Algo de errado nao esta certo");
            }

            ImageIcon icone = new ImageIcon(imagem);
            Icon foto = new ImageIcon(icone.getImage().getScaledInstance(listarPlayerCharacter.getLblFoto().getWidth(),
                    listarPlayerCharacter.getLblFoto().getHeight(), Image.SCALE_SMOOTH));
            listarPlayerCharacter.getLblFoto().setIcon(foto);

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        Home LoginFrame = new Home();
        LoginFrame.setVisible(true);
        LoginFrame.pack();
        LoginFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_exitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeCharacter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeCharacter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeCharacter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeCharacter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeCharacter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Config;
    private javax.swing.JButton Continue;
    private javax.swing.JButton Developers;
    private javax.swing.JButton History;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton newGame;
    // End of variables declaration//GEN-END:variables

    // getters and setters
    public int getId_player() {
        return id_player;
    }

    public void setId_player(int id_player) {
        this.id_player = id_player;
    }
}
